<?php
/**
 * French TinyMCE language file
 *
 * @package tinymce
 * @language fr
 */
$_lang['tiny.toggle_editor'] = 'Basculer l\'affichage de l\'éditeur : ';
$_lang['setting_tiny.base_url'] = 'TinyMCE Document Base URL';
$_lang['setting_tiny.base_url_desc'] = 'Allows the setting of a base URL property to override the document_base_url TinyMCE settings. Useful for rootrelative environments.';
$_lang['setting_tiny.convert_fonts_to_spans'] = 'Convert Fonts to Spans';
$_lang['setting_tiny.convert_fonts_to_spans_desc'] = 'If you set this option to true, TinyMCE will convert all font elements to span elements and generate span elements instead of font elements. This option should be used in order to get more W3C compatible code, since font elements are deprecated.';
$_lang['setting_tiny.convert_newlines_to_brs'] = 'Convert Newlines to BRs';
$_lang['setting_tiny.convert_newlines_to_brs_desc'] = 'If you set this option to true, newline characters codes get converted into br elements. This option is set to false by default.';
$_lang['setting_tiny.css_selectors'] = 'Sélecteurs CSS';
$_lang['setting_tiny.css_selectors_desc'] = 'Indiquez ici une liste de sélecteurs qui doivent être disponibles dans l\'éditeur. Entrez les comme suit :<br />"NomAffiché=NomSélecteur;NomAffiché2=NomSélecteur2"<br /> Admettons par exemple que vous ayez les classes <b>.mono</b> et <b>.smallText</b> dans votre CSS, vous pouvez les ajouter comme suit : <br />"Monospaced text=mono;Small text=smallText"<br />Veuillez noter que la dernière entrée ne doit pas se terminier par un point-virgule.';
$_lang['setting_tiny.custom_buttons1'] = 'Rangée de boutons personnalisés 1';
$_lang['setting_tiny.custom_buttons1_desc'] = 'Indiquez les boutons à utiliser dans la première rangée, sous forme de liste séparée par une virgule. Assurez-vous que chaque bouton à son plugin requis d\'activé dans les options de « Plugins personnalisés ».';
$_lang['setting_tiny.custom_buttons2'] = 'Rangée de boutons personnalisés 2';
$_lang['setting_tiny.custom_buttons2_desc'] = 'Indiquez les boutons à utiliser dans la seconde rangée, sous forme de liste séparée par une virgule. Assurez-vous que chaque bouton à son plugin requis d\'activé dans les options de « Plugins personnalisés ».';
$_lang['setting_tiny.custom_buttons3'] = 'Rangée de boutons personnalisés 3';
$_lang['setting_tiny.custom_buttons3_desc'] = 'Indiquez les boutons à utiliser dans la troisième rangée, sous forme de liste séparée par une virgule. Assurez-vous que chaque bouton à son plugin requis d\'activé dans les options de « Plugins personnalisés ».';
$_lang['setting_tiny.custom_buttons4'] = 'Rangée de boutons personnalisés 4';
$_lang['setting_tiny.custom_buttons4_desc'] = 'Indiquez les boutons à utiliser dans la quatrième rangée, sous forme de liste séparée par une virgule. Assurez-vous que chaque bouton à son plugin requis d\'activé dans les options de « Plugins personnalisés ».';
$_lang['setting_tiny.custom_buttons5'] = 'Rangée de boutons personnalisés 5';
$_lang['setting_tiny.custom_buttons5_desc'] = 'Indiquez les boutons à utiliser dans la cinquième rangée, sous forme de liste séparée par une virgule. Assurez-vous que chaque bouton à son plugin requis d\'activé dans les options de « Plugins personnalisés ».';
$_lang['setting_tiny.custom_plugins'] = 'Plugins personnalisés';
$_lang['setting_tiny.custom_plugins_desc'] = 'Liste des plugins de TinyMCE à utiliser, séparés par une virgule.';
$_lang['setting_tiny.editor_theme'] = 'Thème « éditeur »';
$_lang['setting_tiny.element_format'] = 'Element Format';
$_lang['setting_tiny.element_format_desc'] = 'This option enables control if elements should be in html or xhtml mode. xhtml is the default state for this option. This means that for example <br /> will be <br> if you set this option to "html".';
$_lang['setting_tiny.entity_encoding'] = 'Entity Encoding';
$_lang['setting_tiny.entity_encoding_desc'] = 'This option controls how entities/characters get processed by TinyMCE. Available values are "named", "numeric" and "raw".';
$_lang['setting_tiny.fix_nesting'] = 'Auto-fix Nesting';
$_lang['setting_tiny.fix_nesting_desc'] = 'This option controls if invalid contents should be corrected before insertion in IE. IE has a bug that produced an invalid DOM tree if the input contents are not correct so this option tries to fix this using preprocessing of the HTML string. This option is disabled by default since it might be a bit slow.';
$_lang['setting_tiny.fix_table_elements'] = 'Auto-fix Table Elements';
$_lang['setting_tiny.fix_table_elements_desc'] = 'This option enables you to specify that table elements should be moved outside paragraphs or other block elements. If you enable this option block elements will be split into two chunks when a table is found within it. This option is disabled by default.';
$_lang['setting_tiny.font_size_classes'] = 'Font Size Classes';
$_lang['setting_tiny.font_size_classes_desc'] = 'This option allows specification of a comma separated list of class names that is to be used when the user selects font sizes. This option is only used when the convert_fonts_to_spans option is enabled. This list of classes should be 7 items. This option is not used by default, but can be useful if you want to have custom classes for each font size for browser compatibility.';
$_lang['setting_tiny.font_size_style_values'] = 'Font Size Style Values';
$_lang['setting_tiny.font_size_style_values_desc'] = 'This option allows specification of a comma separated list of style values that is to be used when the user selects font sizes. This option is only used when the convert_fonts_to_spans option is enabled. This list of style values should be 7 items. This option is not used by default, but can be useful if you want to have custom CSS values for each font size for browser compatibility. Defaults to: xx-small,x-small,small,medium,large,x-large,xx-large.';
$_lang['setting_tiny.forced_root_block'] = 'Forced Root Block';
$_lang['setting_tiny.forced_root_block_desc'] = 'This option enables you to make sure that any non block elements or text nodes are wrapped in block elements. For example <strong>something</strong> will result in output like: <p><strong>something</strong></p>.';
$_lang['setting_tiny.indentation'] = 'Indentation';
$_lang['setting_tiny.indentation_desc'] = 'This option allows specification of the indentation level for indent/outdent buttons in the UI. This defaults to 30px but can be any value.';
$_lang['setting_tiny.invalid_elements'] = 'Invalid Elements';
$_lang['setting_tiny.invalid_elements_desc'] = 'This option should contain a comma separated list of element names to exclude from the content. Elements in this list will be removed when TinyMCE executes a cleanup.';
$_lang['setting_tiny.nowrap'] = 'Prevent Editor Wrap';
$_lang['setting_tiny.nowrap_desc'] = 'This nowrap option enables you to control how whitespace is to be wordwrapped within the editor. This option is set to false by default, but if you enable it by setting it to true editor contents will never wrap.';
$_lang['setting_tiny.object_resizing'] = 'Redimensionnement des objets';
$_lang['setting_tiny.object_resizing_desc'] = 'Cette option vous permet d\'activer/désactiver la possibilité de redimensionner à la volée les tableaux et les images dans Mozilla Firefox. Activé par défaut.';
$_lang['setting_tiny.remove_linebreaks'] = 'Remove Linebreaks';
$_lang['setting_tiny.remove_linebreaks_desc'] = 'This option controls whether line break characters should be removed from output HTML.';
$_lang['setting_tiny.remove_redundant_brs'] = 'Remove Redundant BRs';
$_lang['setting_tiny.remove_redundant_brs_desc'] = 'This option is enabled by default and will control the output of trailing BR elements at the end of block elements. Since IE cannot render these properly we need to remove them by default to ensure proper output across all browsers. So for some browsers this BR at the end of the LI at the example below is redundant.';
$_lang['setting_tiny.removeformat_selector'] = 'RemoveFormat Selector';
$_lang['setting_tiny.removeformat_selector_desc'] = 'This option allows specification of which elements should be removed when you press the removeformat button. This is a CSS selector pattern.';
$_lang['setting_tiny.path_options'] = 'Options de chemin';
$_lang['setting_tiny.path_options_desc'] = 'Soit "rootrelative", "docrelative", ou "fullpathurl".';
$_lang['setting_tiny.table_inline_editing'] = 'Éditeur de tableau';
$_lang['setting_tiny.table_inline_editing_desc'] = 'Cette option vous permet d\'activer/désactiver la possibilité de redimensionner à la volée les tableaux dans Mozilla Firefox. D\'après la documentation de TinyMCE, cette option est bogguée et non « redesignable », donc désactivée par défaut.';
$_lang['setting_tiny.template_list'] = 'Liste de modèles';
$_lang['setting_tiny.template_list_desc'] = 'Indiquez une liste de modèles pour le plugin de modèle. Ils doivent être séparés par une virgule et leur format doit être nom:URL:description. Par exemple, MonModèle:assets/templates/modele.tpl:Mon modèle à moi (si si, le mien)';
$_lang['setting_tiny.template_list_snippet'] = 'Template List Snippet';
$_lang['setting_tiny.template_list_snippet_desc'] = 'Enter the name of a snippet that will generate a list of templates compatible with the tiny.template_list format (name:URL:description). If a snippet is named, the results returned by the snippet call will be used rather than any value present in tiny.template_list';
$_lang['setting_tiny.template_selected_content_classes'] = 'Template Selected Content Classes';
$_lang['setting_tiny.template_selected_content_classes_desc'] = 'Indiquez une liste de classes CSS pour le plugin de modèle. La liste doit être séparée par un espace. Chaque modèle « with one of the specified CSS classes will have its content replaced by the selected editor content when first inserted ».';
$_lang['setting_tiny.theme_advanced_blockformats'] = 'Éléments bloques HTML';
$_lang['setting_tiny.theme_advanced_blockformats_desc'] = 'Cette option doit contenir une liste de formats, séparés par une virgule, qui seront disponibles dans le menu déroulant de formats. Cette option n\'est disponible que si le thème « avancé » est utilisé.';
$_lang['setting_tiny.theme_advanced_font_sizes'] = 'Advanced Theme Font Sizes';
$_lang['setting_tiny.theme_advanced_font_sizes_desc'] = 'This option should contain a comma separated list of font sizes to include. Each item in the list should be a valid value for the font-style CSS property (10px, 12pt, 1em, etc.). Example: Big text=30px,Small text=small,My Text Size=.mytextsize';
$_lang['setting_tiny.skin'] = 'Skins TinyMCE';
$_lang['setting_tiny.skin_desc'] = 'Cette option vous permet d\'indiquer quel skin vous souhaitez utiliser dans votre thème. Un skin est un fichier CSS qui est chargé depuis le répertoire skin de votre thème. Le thème « avancé » inclus avec TinyMCE a deux skins, appelés "default" et "o2k7". Nous avons ajouté un autre skin, sélectionné par défaut, appelé "cirkuit".';
$_lang['setting_tiny.skin_variant'] = 'Variante de skin TinyMCE';
$_lang['setting_tiny.skin_variant_desc'] = 'Cette option permet d\'indiquer une vartiante de skin, par exemple « argent » ou « noir ». Le skin par défaut n\'offre aucune variante alors que « o2k7 » propose les variantes "silver" ou "black". Pour le skin "cirkuit" il y a une variante nommée "silver". Lors de la création d\'un skin, plusieurs variantes peuvent être créées, en ajoutant le fichier CSS ui_[nom_de_la_variante].css aux côtés du fichier par défaut ui.css.';
$_lang['area_advanced-theme'] = 'Advanced Theme';
$_lang['area_cleanup-output'] = 'Cleanup/Output';
$_lang['area_custom-buttons'] = 'Custom Buttons';
$_lang['area_general'] = 'General';
$_lang['area_url'] = 'URL';
$_lang['area_callbacks'] = 'Callbacks';
$_lang['area_layout'] = 'Layout';